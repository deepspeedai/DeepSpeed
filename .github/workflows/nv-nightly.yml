name: nv-nightly

on:
  schedule:
    - cron: "0 0 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    runs-on: [self-hosted, nvidia, cu111, v100]

    steps:
      - uses: actions/checkout@v2

      - name: environment
        run: |
          echo "JobID: $AISC_NODE_INSTANCE_ID"
          nvidia-smi
          which python
          python --version
          which nvcc
          nvcc --version
          pip install --upgrade pip
          pip uninstall --yes torch torchvision triton
          pip install torch==1.8.2+cu111 torchvision==0.9.2+cu111 -f https://download.pytorch.org/whl/lts/1.8/torch_lts.html
          # Since the cupy install that happens in DS's setup.py gets the cuda
          # version from pytorch/driver api (and not nvcc/runtime api), it's
          # possible that when torch releases a new version, the DS install
          # will install a new version of cupy. The resulting environment
          # causes an error when import cupy. To avoid this, we uninstall cupy.
          pip uninstall --yes $(pip list | grep -Po "cupy[^\s]*" | tr '\n' ' ')
          python -c "import torch; print('torch:', torch.__version__, torch)"
          python -c "import torch; print('CUDA available:', torch.cuda.is_available())"

      - name: Install transformers
        run: |
          git clone https://github.com/huggingface/transformers
          cd transformers
          # if needed switch to the last known good SHA until transformers@master is fixed
          # git checkout 1cc453d33
          git rev-parse --short HEAD
          pip uninstall --yes transformers
          pip install .

      - name: Install deepspeed
        run: |
          pip uninstall --yes deepspeed
          pip install .[dev,1bit,autotuning,inf]
          ds_report

      - name: Unit tests
        run: |
          unset TORCH_CUDA_ARCH_LIST # only jit compile for current arch
          if [[ -d ./torch-extensions ]]; then rm -rf ./torch-extensions; fi
          cd tests
          TORCH_EXTENSIONS_DIR=./torch-extensions pytest --color=yes --durations=0 --forked --verbose -m 'nightly' unit/ --torch_ver="1.8" --cuda_ver="11"
